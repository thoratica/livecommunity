{"version":3,"sources":["components/View.tsx","components/PostList.tsx","components/Policy.tsx","components/Login.tsx","components/Write.tsx","App.tsx","index.tsx"],"names":["socket","socketio","connect","config","server","openGraph","OpenGraph","og","site_name","View","props","state","title","content","author","comments","delete","this","fetch","match","params","id","json","setState","on","a","eval","e","sans","preventDefault","persist","target","value","replace","localStorage","getItem","then","res","data","emit","username","window","location","href","set","description","locale","current","url","className","onClick","remove","i","Object","keys","length","push","key","to","source","escapeHtml","onSubmit","comment","type","placeholder","React","Component","PostList","post","views","Policy","style","height","Login","method","body","JSON","stringify","password","headers","text","alert","setItem","reload","email","show","src","alt","login","signup","Write","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"08EAqBMA,OAASC,wDAASC,QAAQC,2CAAOC,QAEjCC,UAAY,IAAIC,8CAAU,CAC9BC,GAAI,CACFC,UAAW,oBAITC,K,0UACJ,cAAYC,GAAa,IAAD,6JACtB,mBAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,SAAU,GACVC,OAAQ,IAPY,E,4uBAWtBC,K,iBAEUC,kDAAM,GAAD,OAAIf,2CAAOC,OAAX,iBAA0Ba,KAAKP,MAAMS,MAAMC,OAAOC,K,8CAC7DC,O,gDAHCC,S,gCAKLvB,OAAOwB,GAAG,UAAV,yQAAqB,2IAAAC,EAAA,kEACnB,OADmB,SAGTP,kDAAM,GAAD,OAAIf,2CAAOC,OAAX,iBAA0B,OAAKM,MAAMS,MAAMC,OAAOC,KAH9C,8BAIfC,OAJe,wBACdC,SADc,4DAQrBG,KAAK,0G,uMAICC,EAAQC,GACdD,EAAEE,iBACFF,EAAEG,UAC2C,KAAzCH,EAAEI,OAAO,GAAGC,MAAMC,QAAQ,MAAO,KACrCf,kDAAM,GAAD,OAAIf,2CAAOC,OAAX,2BAAoC8B,aAAaC,QAAQ,WAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIf,UAClBc,MAAK,SAACE,GACLtC,OAAOuC,KAAK,UAAW,CACrBlB,GAAIO,EAAKlB,MAAMS,MAAMC,OAAOC,GAC5BmB,SAAUF,EAAKE,SACf3B,QAASc,EAAEI,OAAO,GAAGC,QAEvBL,EAAEI,OAAO,GAAGC,MAAQ,Q,6BAGnBL,EAAQC,GACbD,EAAEE,iBACFF,EAAEG,UACFZ,kDAAM,GAAD,OAAIf,2CAAOC,OAAX,2BAAoC8B,aAAaC,QAAQ,WAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIf,UAClBc,MAAK,SAACE,GACLtC,OAAOuC,KAAK,SAAU,CACpBlB,GAAIO,EAAKlB,MAAMS,MAAMC,OAAOC,KAE9BoB,OAAOC,SAASC,KAAO,S,+BAGnB,IAAD,OACPtC,UAAUuC,IAAI,CACZrC,GAAI,CACFK,MAAOK,KAAKN,MAAMC,MAClBiC,YAAa5B,KAAKN,MAAME,QACxBiC,OAAQ,CACNC,QAAS,SAEXC,IAAKP,OAAOC,SAASC,QAGzBzB,kDAAM,GAAD,OAAIf,2CAAOC,OAAX,2BAAoC8B,aAAaC,QAAQ,WAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIf,UAClBc,MAAK,SAACE,GACDA,EAAKE,WAAa,EAAK7B,MAAMG,QAA4B,SAAlBwB,EAAKE,SAC9C,EAAKjB,SAAS,CACZP,OACE,qEAAQiC,UAAU,SAASC,QAAS,SAACvB,GAAD,OAAO,EAAKwB,OAAOxB,EAAG,KAA1D,kBAMJ,EAAKJ,SAAS,CAAEP,OAAQ,4HAI9B,IADA,IAAID,EAAW,GACNqC,EAAI,EAAGA,EAAIC,OAAOC,KAAKrC,KAAKN,MAAMI,UAAUwC,OAAQH,IAC3DrC,EAASyC,KACP,kEAAKP,UAAU,UAAUQ,IAAKL,GAC5B,mEAAMH,UAAU,mBACbhC,KAAKN,MAAMI,SAASqC,GAAGZ,UAE1B,mEAAMS,UAAU,kBACbhC,KAAKN,MAAMI,SAASqC,GAAGvC,WAKhC,OACE,kEAAKoC,UAAU,QACb,2DAAC,iDAAD,CAAMS,GAAG,IAAIT,UAAU,eAAvB,4BAGA,kEAAKA,UAAU,OACb,kEAAKA,UAAU,SAAShC,KAAKN,MAAMC,OACnC,kEAAKqC,UAAU,UAAf,MAA4BhC,KAAKN,MAAMG,SAEzC,sEACA,kEAAKmC,UAAU,WACb,2DAAC,iEAAD,CAAUU,OAAQ1C,KAAKN,MAAME,QAAS+C,YAAY,KAEnD3C,KAAKN,MAAMK,OACZ,sEACA,qFAAQD,EAASwC,OAAjB,UACE,WACA,GAA6C,OAAzCd,OAAOP,aAAaC,QAAQ,SAC9B,OACE,mEAAMc,UAAU,OAAOY,SAAU,SAAClC,GAAD,OAAO,EAAKmC,QAAQnC,EAAG,KACtD,oEAAOoC,KAAK,OAAOC,YAAY,8BAC/B,oEACED,KAAK,SACL/B,MAAM,qBACNiB,UAAU,oBARlB,GAcF,kEAAKA,UAAU,eAAelC,Q,MA7HnBkD,6CAAMC,WAmIVzD,4B,kfCnJTT,G,OAASC,IAASC,QAAQC,EAAOC,SA+DxB+D,E,kDA5Db,WAAYzD,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACX2B,KAAM,IAHgB,E,gEAML,IAAD,OAClBpB,IAAM,GAAD,OAAIf,EAAOC,OAAX,WACFgC,MAAK,SAACC,GAAD,OAASA,EAAIf,UAClBc,MAAK,SAACE,GACL,EAAKf,SAAS,CAAEe,YAEpBtC,EAAOwB,GAAG,UAAV,sBAAqB,sBAAAC,EAAA,kEACnB,EADmB,SAEEP,IAAM,GAAD,OAAIf,EAAOC,OAAX,WAFP,8BAEmCkB,OAFnC,yBAEjBgB,KAFiB,WACdf,SADc,8D,+BAOrB,IAAI6C,EAAO,GACX,GAA4C,IAAxCf,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMiB,OAC/Ba,EAAKZ,KACH,wBAAIP,UAAU,UAAUQ,IAAK,WAA7B,gDAKF,IAAK,IAAIL,EAAI,EAAGA,EAAIC,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMiB,OAAQH,IACvDgB,EAAKZ,KACH,yBAAKP,UAAU,OAAOQ,IAAKL,GACzB,kBAAC,IAAD,CACEM,GAAE,gBAAWL,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMc,IAC1CH,UAAU,aAEThC,KAAKN,MAAM2B,KAAKe,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMc,IAAIxC,MAClD,0BAAMqC,UAAU,gBAAhB,IAAiChC,KAAKN,MAAM2B,KAAKe,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMc,IAAIrC,SAASwC,OAA3F,MAEF,0BAAMN,UAAU,cACbhC,KAAKN,MAAM2B,KAAKe,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMc,IAAItC,QAEpD,0BAAMmC,UAAU,aACbhC,KAAKN,MAAM2B,KAAKe,OAAOC,KAAKrC,KAAKN,MAAM2B,MAAMc,IAAIiB,SAM5D,OACE,yBAAKpB,UAAU,SACb,yBAAKA,UAAU,cACb,0BAAMA,UAAU,aAAhB,gBACA,0BAAMA,UAAU,cAAhB,sBACA,0BAAMA,UAAU,aAAhB,uBAEF,yBAAKA,UAAU,YAAYmB,Q,GAvDZH,IAAMC,W,iCCXd,SAASI,IACtB,OACE,yBAAKrB,UAAU,QACb,kBAAC,aAAD,CAAYsB,MAAO,CAAEC,OAAQ,MAA7B,8fAIE,6BACA,6BALF,mTAOE,6BACA,6BARF,uHASE,6BACA,6BAVF,6iBAcE,6BACA,6BAfF,iFAgBE,6BACA,6BAjBF,kNAmBE,6BACA,6BApBF,qEAqBE,6BACA,6BAtBF,yKAuBE,6BACA,6BAxBF,yDAyBE,6BAzBF,4SA2BE,6BACA,6BA5BF,yDA6BE,6BA7BF,4IA8BE,6BA9BF,uDA+BE,6BA/BF,uFAgCE,6BAhCF,4EAiCE,6BAjCF,4JAkCE,6BACA,6BAnCF,ujBAuCE,6BACA,6BACA,6BAzCF,mFA0CE,6BACA,6BA3CF,obA8CE,6BACA,6BA/CF,uJAgDE,6BACA,6BAjDF,6EAkDE,6BAlDF,sXAqDE,6BArDF,uFAsDE,6BAtDF,4JAuDE,6BAvDF,8BAwDE,6BACA,6BAzDF,+TA2DE,6BACA,6BA5DF,oRA8DE,6BACA,6BA/DF,sZAkEE,6BACA,6BAnEF,8fAsEE,6BACA,6BAvEF,yUAyEE,6BACA,6BA1EF,4VA4EE,6BACA,6BA7EF,qYAgFE,6BACA,6BACA,6BAlFF,wFAmFE,6BACA,6BApFF,6LAsFE,6BACA,6BAvFF,4EAwFE,6BAxFF,+HAyFE,6BAzFF,gCA0FE,6BACA,6BACA,6BACA,6BA7FF,8aAgGE,6BACA,6BAjGF,6BAkGE,6BAlGF,gpBAsGE,6BACA,6BAvGF,6BAwGE,6BAxGF,mwBA6GE,6BACA,6BA9GF,6BA+GE,6BACA,6BACA,6BACA,6BAlHF,+JAmHE,6BACA,6BApHF,oOAsHE,6BACA,6BAvHF,2EAwHE,6BACA,6BAzHF,qiBA6HE,6BACA,6BA9HF,kEA+HE,6BA/HF,oCAgIE,6BAhIF,iDAiIE,6BAjIF,sDAkIE,6BACA,6BAnIF,+GAoIE,6BACA,6BArIF,yEAsIE,6BAtIF,wBAuIE,6BAvIF,wBAwIE,6BAxIF,2BAyIE,6BACA,6BA1IF,6yBAgJE,6BACA,6BAjJF,qEAkJE,6BACA,6BAnJF,0dAsJE,6BACA,6BACA,6BAxJF,mZA2JE,6BACA,6BA5JF,wDA6JE,6BA7JF,6iBAgKE,6BACA,6BAjKF,4EAkKE,6BAlKF,4kB,kBCuHSC,E,oKAjHP9C,GACJA,EAAEE,iBACFX,IAAM,GAAD,OAAIf,EAAOC,OAAX,SAA0B,CAC7BsE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBrC,SAAUb,EAAEI,OAAO,GAAGC,MACtB8C,SAAUnD,EAAEI,OAAO,GAAGC,QAExB+C,QAAS,CACP,eAAgB,sBAGjB3C,MAAK,SAACC,GAAD,OAASA,EAAI2C,UAClB5C,MAAK,SAACE,GACL,GAAa,UAATA,EACF,OAAO2C,MAAM,8GACf/C,aAAagD,QAAQ,QAAS5C,GAC9BG,OAAOC,SAASyC,c,6BAGfxD,GAEL,GADAA,EAAEE,iBACEF,EAAEI,OAAO,GAAGC,MAAMuB,OAAS,GAAK5B,EAAEI,OAAO,GAAGC,MAAMuB,OAAS,EAC7D,OAAO0B,MAAM,2IACf/D,IAAM,GAAD,OAAIf,EAAOC,OAAX,WAA4B,CAC/BsE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBrC,SAAUb,EAAEI,OAAO,GAAGC,MACtB8C,SAAUnD,EAAEI,OAAO,GAAGC,MACtBoD,MAAOzD,EAAEI,OAAO,GAAGC,QAErB+C,QAAS,CACP,eAAgB,sBAGjB3C,MAAK,SAACC,GAAD,OAASA,EAAI2C,UAClB5C,MAAK,SAACE,GACL,GAAa,UAATA,EAAkB,OAAO2C,MAAM,+EACnC/C,aAAagD,QAAQ,QAAS5C,GAC9BG,OAAOC,SAASyC,c,+BAIpB,OAAIlE,KAAKP,MAAM2E,KAEX,yBAAKpC,UAAU,SACb,yBAAKA,UAAU,QACf,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,kCAEF,kBAAC,IAAD,KACE,uBAAGN,KAAK,yBACN,yBACEM,UAAU,SACVqC,IAAI,kCACJC,IAAI,MAGR,0BAAM1B,SAAU5C,KAAKuE,OACnB,yBAAKvC,UAAU,UACb,oDAEE,2BAAOc,KAAK,OAAO1C,GAAG,cAExB,0DAEE,2BAAO0C,KAAK,WAAW1C,GAAG,eAG9B,2BACE4B,UAAU,SACVc,KAAK,SACL/B,MAAM,yBAIZ,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAM6B,SAAU5C,KAAKwE,QACnB,yBAAKxC,UAAU,UACb,oDAEE,2BAAOc,KAAK,OAAO1C,GAAG,cAExB,0DAEE,2BAAO0C,KAAK,WAAW1C,GAAG,cAE5B,oDAEE,2BAAO0C,KAAK,QAAQ1C,GAAG,YAG3B,2BACE4B,UAAU,SACVc,KAAK,SACL/B,MAAM,kCASb,yC,GA7GOiC,IAAMC,WCPpBlE,G,OAASC,IAASC,QAAQC,EAAOC,SA4CxBsF,E,mKAzCR/D,GACHA,EAAEE,iBACFF,EAAEG,UAEyC,KAAzCH,EAAEI,OAAO,GAAGC,MAAMC,QAAQ,MAAO,KACQ,KAAzCN,EAAEI,OAAO,GAAGC,MAAMC,QAAQ,MAAO,KAGnCf,MAAM,GAAD,OAAIf,EAAOC,OAAX,2BAAoC8B,aAAaC,QAAQ,WAC3DC,MAAK,SAACC,GAAD,OAASA,EAAIf,UAClBc,MAAK,SAACE,GACLtC,EAAOuC,KAAK,SAAU,CACpB3B,MAAOe,EAAEI,OAAO,GAAGC,MACnBnB,QAASc,EAAEI,OAAO,GAAGC,MACrBlB,OAAQwB,EAAKE,SACbzB,SAAU,GACVsD,MAAO,IAET5B,OAAOC,SAASC,KAAO,S,+BAI3B,OACE,yBAAKM,UAAU,SACb,kDACA,0BAAMY,SAAU5C,KAAKmD,MACnB,8CAEE,2BAAOL,KAAK,UAEd,8CAEE,oCAEF,2BAAOA,KAAK,SAASd,UAAU,SAASjB,MAAM,uB,GAnCpCiC,IAAMC,W,OC0CXyB,G,yDAxCb,WAAYjF,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACX6E,OAAO,GAHa,E,qDAMd,IAAD,OACP,OACE,yBAAKvC,UAAU,OACb,gCACE,6CAE+C,OAAzCR,OAAOP,aAAaC,QAAQ,SAE5B,4BAAQe,QAAS,kBAAM,EAAK3B,SAAS,CAAEiE,OAAO,MAA9C,sBAMA,kBAAC,IAAD,CAAMvC,UAAU,SAASS,GAAG,UAA5B,uBAOR,kBAAC,EAAD,CAAO2B,KAAMpE,KAAKN,MAAM6E,QACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,YAAYC,UAAWrF,MACzC,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,SAASC,UAAWJ,W,GAjChCzB,IAAMC,YCFxB6B,IAASC,OACP,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOF,UAAWH,MAGtBM,SAASC,eAAe,W","file":"static/js/main.fd0332c0.chunk.js","sourcesContent":["import React from 'react';\nimport socketio from 'socket.io-client';\nimport OpenGraph from 'set-open-graph';\nimport fetch from 'node-fetch';\nimport Markdown from 'react-markdown/with-html';\nimport { Link } from 'react-router-dom';\nimport config from '../config.json';\nimport './View.css';\n\ninterface Props {\n  match: any;\n}\n\ninterface State {\n  title: string;\n  content: string;\n  author: string;\n  comments: Array<any>;\n  delete: any;\n}\n\nconst socket = socketio.connect(config.server);\n\nconst openGraph = new OpenGraph({\n  og: {\n    site_name: 'LIVE Community'\n  }\n})\n\nclass View extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n      author: '',\n      comments: [],\n      delete: '',\n    };\n  }\n  async componentDidMount() {\n    this.setState(\n      await (\n        await fetch(`${config.server}/post/${this.props.match.params.id}`)\n      ).json()\n    );\n    socket.on('updated', async () => {\n      this.setState(\n        await (\n          await fetch(`${config.server}/post/${this.props.match.params.id}`)\n        ).json()\n      );\n    });\n    // eslint-disable-next-line\n    eval(`document.querySelectorAll('pre code').forEach((block) => {\n      hljs.highlightBlock(block);\n    });`)\n  }\n  comment(e: any, sans: any) {\n    e.preventDefault();\n    e.persist();\n    if (e.target[0].value.replace(/ /gi, '') === '') return\n    fetch(`${config.server}/userInfo?token=${localStorage.getItem('token')}`)\n      .then((res) => res.json())\n      .then((data) => {\n        socket.emit('comment', {\n          id: sans.props.match.params.id,\n          username: data.username,\n          content: e.target[0].value,\n        });\n        e.target[0].value = '';\n      });\n  }\n  remove(e: any, sans: any) {\n    e.preventDefault();\n    e.persist();\n    fetch(`${config.server}/userInfo?token=${localStorage.getItem('token')}`)\n      .then((res) => res.json())\n      .then((data) => {\n        socket.emit('delete', {\n          id: sans.props.match.params.id,\n        });\n        window.location.href = '/';\n      });\n  }\n  render() {\n    openGraph.set({\n      og: {\n        title: this.state.title,\n        description: this.state.content,\n        locale: {\n          current: 'ko_KR'\n        },\n        url: window.location.href,\n      }\n    })\n    fetch(`${config.server}/userInfo?token=${localStorage.getItem('token')}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.username === this.state.author || data.username === 'tica') {\n          this.setState({\n            delete: (\n              <button className=\"delete\" onClick={(e) => this.remove(e, this)}>\n                삭제\n              </button>\n            ),\n          });\n        } else {\n          this.setState({ delete: <></> });\n        }\n      });\n    let comments = [];\n    for (let i = 0; i < Object.keys(this.state.comments).length; i++) {\n      comments.push(\n        <div className=\"comment\" key={i}>\n          <span className=\"commentUsername\">\n            {this.state.comments[i].username}\n          </span>\n          <span className=\"commentContent\">\n            {this.state.comments[i].content}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"View\">\n        <Link to=\"/\" className=\"button back\">\n          목록으로\n        </Link>\n        <div className=\"top\">\n          <div className=\"title\">{this.state.title}</div>\n          <div className=\"author\">by {this.state.author}</div>\n        </div>\n        <hr />\n        <div className=\"content\">\n          <Markdown source={this.state.content} escapeHtml={false} />\n        </div>\n        {this.state.delete}\n        <hr />\n        <h3>댓글 {comments.length}개</h3>\n        {(() => {\n          if (window.localStorage.getItem('token') !== null) {\n            return (\n              <form className=\"flex\" onSubmit={(e) => this.comment(e, this)}>\n                <input type=\"text\" placeholder=\"댓글 입력\"></input>\n                <input\n                  type=\"submit\"\n                  value=\"올리기\"\n                  className=\"button comment\"\n                ></input>\n              </form>\n            );\n          }\n        })()}\n        <div className=\"commentList\">{comments}</div>\n      </div>\n    );\n  }\n}\n\nexport default View;\n","import React from 'react';\nimport socketio from 'socket.io-client';\nimport fetch from 'node-fetch';\nimport { Link } from 'react-router-dom';\nimport config from '../config.json';\nimport './PostList.css';\n\ninterface Props {}\n\ninterface States {\n  data: any;\n}\n\nconst socket = socketio.connect(config.server);\n\nclass PostList extends React.Component<Props, States> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      data: {},\n    };\n  }\n  componentDidMount() {\n    fetch(`${config.server}/posts`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ data });\n      });\n    socket.on('updated', async () => {\n      this.setState({\n        data: await (await fetch(`${config.server}/posts`)).json(),\n      });\n    });\n  }\n  render() {\n    let post = [];\n    if (Object.keys(this.state.data).length === 0) {\n      post.push(\n        <h2 className=\"noposts\" key={'noposts'}>\n          글이 없습니다.\n        </h2>\n      );\n    } else {\n      for (let i = 0; i < Object.keys(this.state.data).length; i++) {\n        post.push(\n          <div className=\"post\" key={i}>\n            <Link\n              to={`/view/${Object.keys(this.state.data)[i]}`}\n              className=\"postTitle\"\n            >\n              {this.state.data[Object.keys(this.state.data)[i]].title}\n              <span className=\"commentCount\">({this.state.data[Object.keys(this.state.data)[i]].comments.length})</span>\n            </Link>\n            <span className=\"postAuthor\">\n              {this.state.data[Object.keys(this.state.data)[i]].author}\n            </span>\n            <span className=\"postViews\">\n              {this.state.data[Object.keys(this.state.data)[i]].views}\n            </span>\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"posts\">\n        <div className=\"post title\">\n          <span className=\"postTitle\">제목</span>\n          <span className=\"postAuthor\">작성자</span>\n          <span className=\"postViews\">조회수</span>\n        </div>\n        <div className=\"postList\">{post}</div>\n      </div>\n    );\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport './Policy.css';\n\nexport default function Policy() {\n  return (\n    <div className=\"code\">\n      <Scrollbars style={{ height: 100 }}>\n        ('https://commu.live' 이하 'LIVECommunity')은(는) 개인정보보호법에 따라\n        이용자의 개인정보 보호 및 권익을 보호하고 개인정보와 관련한 이용자의\n        고충을 원활하게 처리할 수 있도록 다음과 같은 처리방침을 두고 있습니다.\n        <br />\n        <br /> ('LIVECommunity') 은(는) 회사는 개인정보처리방침을 개정하는 경우\n        웹사이트 공지사항(또는 개별공지)을 통하여 공지할 것입니다.\n        <br />\n        <br /> ○ 본 방침은부터 2020년 9월 4일부터 시행됩니다.\n        <br />\n        <br /> 1. 개인정보의 처리 목적 ('https://commu.live'이하\n        'LIVECommunity')은(는) 개인정보를 다음의 목적을 위해 처리합니다. 처리한\n        개인정보는 다음의 목적이외의 용도로는 사용되지 않으며 이용 목적이 변경될\n        시에는 사전동의를 구할 예정입니다.\n        <br />\n        <br /> 가. 홈페이지 회원가입 및 관리\n        <br />\n        <br /> 회원 가입의사 확인, 회원자격 유지&middot;관리 등을 목적으로\n        개인정보를 처리합니다.\n        <br />\n        <br /> 나. 재화 또는 서비스 제공\n        <br />\n        <br /> 서비스 제공, 콘텐츠 제공 등을 목적으로 개인정보를 처리합니다.\n        <br />\n        <br /> 2. 개인정보 파일 현황\n        <br /> ('https://commu.live'이하 'LIVECommunity')가 개인정보 보호법\n        제32조에 따라 등록․공개하는 개인정보파일의 처리목적은 다음과 같습니다.\n        <br />\n        <br /> 1. 개인정보 파일명 : tica\n        <br /> 개인정보 항목 : 이메일, 비밀번호, 로그인ID, 접속 IP 정보\n        <br /> 수집방법 : 홈페이지\n        <br /> 보유근거 : 커뮤니티 서비스 제공\n        <br /> 보유기간 : 탈퇴 시 즉시 파기\n        <br /> 관련법령 : 신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\n        <br />\n        <br /> ※ 기타('https://commu.live'이하 'LIVECommunity')의 개인정보파일\n        등록사항 공개는 개인정보보호위원회 개인정보보호 종합지원\n        포털(www.privacy.go.kr) &rarr; 개인정보민원 &rarr; 개인정보열람등 요구\n        &rarr; 개인정보파일 목록검색 메뉴를 활용해주시기 바랍니다.\n        <br />\n        <br />\n        <br /> 3. 개인정보의 처리 및 보유 기간\n        <br />\n        <br /> ① ('LIVECommunity')은(는) 법령에 따른 개인정보\n        보유&middot;이용기간 또는 정보주체로부터 개인정보를 수집시에 동의 받은\n        개인정보 보유,이용기간 내에서 개인정보를 처리,보유합니다.\n        <br />\n        <br /> ② 각각의 개인정보 처리 및 보유 기간은 다음과 같습니다.\n        <br />\n        <br /> 1.&lt;홈페이지 회원가입 및 관리&gt;\n        <br /> &lt;홈페이지 회원가입 및 관리&gt;와 관련한 개인정보는 수집.이용에\n        관한 동의일로부터&lt;탈퇴 시 즉시 파기&gt;까지 위 이용목적을 위하여\n        보유.이용됩니다.\n        <br /> 보유근거 : 커뮤니티 서비스 제공\n        <br /> 관련법령 : 신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\n        <br /> 예외사유 :\n        <br />\n        <br /> 4. 정보주체와 법정대리인의 권리&middot;의무 및 그 행사방법\n        이용자는 개인정보주체로써 다음과 같은 권리를 행사할 수 있습니다.\n        <br />\n        <br /> ① 정보주체는 tica에 대해 언제든지 개인정보\n        열람,정정,삭제,처리정지 요구 등의 권리를 행사할 수 있습니다.\n        <br />\n        <br /> ② 제1항에 따른 권리 행사는 tica에 대해 개인정보 보호법 시행령\n        제41조 제1항에 따라 전자우편을 통하여 하실 수 있으며 tica는 이에 대해\n        지체 없이 조치하겠습니다.\n        <br />\n        <br /> ③ 제1항에 따른 권리 행사는 정보주체의 법정대리인이나 위임을 받은\n        자 등 대리인을 통하여 하실 수 있습니다. 이 경우 개인정보 보호법 시행규칙\n        별지 제11호 서식에 따른 위임장을 제출하셔야 합니다.\n        <br />\n        <br /> ④ 개인정보 열람 및 처리정지 요구는 개인정보보호법 제35조 제5항,\n        제37조 제2항에 의하여 정보주체의 권리가 제한 될 수 있습니다.\n        <br />\n        <br /> ⑤ 개인정보의 정정 및 삭제 요구는 다른 법령에서 그 개인정보가 수집\n        대상으로 명시되어 있는 경우에는 그 삭제를 요구할 수 없습니다.\n        <br />\n        <br /> ⑥ tica는 정보주체 권리에 따른 열람의 요구, 정정&middot;삭제의\n        요구, 처리정지의 요구 시 열람 등 요구를 한 자가 본인이거나 정당한\n        대리인인지를 확인합니다.\n        <br />\n        <br />\n        <br /> 5. 처리하는 개인정보의 항목 작성\n        <br />\n        <br /> ① ('https://commu.live'이하 'LIVECommunity')은(는) 다음의\n        개인정보 항목을 처리하고 있습니다.\n        <br />\n        <br /> 1&lt;홈페이지 회원가입 및 관리&gt;\n        <br /> 필수항목 : 이메일, 비밀번호, 로그인ID, 접속 IP 정보\n        <br /> - 선택항목 :\n        <br />\n        <br />\n        <br />\n        <br /> 6. 개인정보의 파기('LIVECommunity')은(는) 원칙적으로 개인정보\n        처리목적이 달성된 경우에는 지체없이 해당 개인정보를 파기합니다. 파기의\n        절차, 기한 및 방법은 다음과 같습니다.\n        <br />\n        <br /> -파기절차\n        <br /> 이용자가 입력한 정보는 목적 달성 후 별도의 DB에 옮겨져(종이의\n        경우 별도의 서류) 내부 방침 및 기타 관련 법령에 따라 일정기간 저장된 후\n        혹은 즉시 파기됩니다. 이 때, DB로 옮겨진 개인정보는 법률에 의한 경우가\n        아니고서는 다른 목적으로 이용되지 않습니다.\n        <br />\n        <br /> -파기기한\n        <br /> 이용자의 개인정보는 개인정보의 보유기간이 경과된 경우에는\n        보유기간의 종료일로부터 5일 이내에, 개인정보의 처리 목적 달성, 해당\n        서비스의 폐지, 사업의 종료 등 그 개인정보가 불필요하게 되었을 때에는\n        개인정보의 처리가 불필요한 것으로 인정되는 날로부터 5일 이내에 그\n        개인정보를 파기합니다.\n        <br />\n        <br /> -파기방법\n        <br />\n        <br />\n        <br />\n        <br /> 7. 개인정보 자동 수집 장치의 설치&bull;운영 및 거부에 관한 사항\n        <br />\n        <br /> tica 은 정보주체의 이용정보를 저장하고 수시로 불러오는\n        &lsquo;쿠키&rsquo;를 사용하지 않습니다.\n        <br />\n        <br /> 8. 개인정보 보호책임자 작성\n        <br />\n        <br /> ① tica(&lsquo;https://commu.live&rsquo;이하 &lsquo;LIVECommunity)\n        은(는) 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와\n        관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보\n        보호책임자를 지정하고 있습니다.\n        <br />\n        <br /> ▶ 개인정보 보호책임자\n        <br /> 성명 :이다윗\n        <br /> 직책 :운영/개발자\n        <br /> 연락처 :01075326943, me@thoratica.net,\n        <br />\n        <br /> ※ 개인정보 보호 담당부서로 연결됩니다.\n        <br />\n        <br /> ▶ 개인정보 보호 담당부서\n        <br /> 부서명 :\n        <br /> 담당자 :\n        <br /> 연락처 :, ,\n        <br />\n        <br /> ② 정보주체께서는 tica(&lsquo;https://commu.live&rsquo;이하\n        &lsquo;LIVECommunity) 의 서비스(또는 사업)을 이용하시면서 발생한 모든\n        개인정보 보호 관련 문의, 불만처리, 피해구제 등에 관한 사항을 개인정보\n        보호책임자 및 담당부서로 문의하실 수 있습니다.\n        tica(&lsquo;https://commu.live&rsquo;이하 &lsquo;LIVECommunity) 은(는)\n        정보주체의 문의에 대해 지체 없이 답변 및 처리해드릴 것입니다.\n        <br />\n        <br /> 9. 개인정보 처리방침 변경\n        <br />\n        <br /> ①이 개인정보처리방침은 시행일로부터 적용되며, 법령 및 방침에 따른\n        변경내용의 추가, 삭제 및 정정이 있는 경우에는 변경사항의 시행 7일 전부터\n        공지사항을 통하여 고지할 것입니다.\n        <br />\n        <br />\n        <br /> 10. 개인정보의 안전성 확보 조치 ('LIVECommunity')은(는)\n        개인정보보호법 제29조에 따라 다음과 같이 안전성 확보에 필요한\n        기술적/관리적 및 물리적 조치를 하고 있습니다.\n        <br />\n        <br /> 1. 개인정보의 암호화\n        <br /> 이용자의 개인정보는 비밀번호는 암호화 되어 저장 및 관리되고 있어,\n        본인만이 알 수 있으며 중요한 데이터는 파일 및 전송 데이터를 암호화\n        하거나 파일 잠금 기능을 사용하는 등의 별도 보안기능을 사용하고 있습니다.\n        <br />\n        <br /> 2. 개인정보에 대한 접근 제한\n        <br /> 개인정보를 처리하는 데이터베이스시스템에 대한 접근권한의\n        부여,변경,말소를 통하여 개인정보에 대한 접근통제를 위하여 필요한 조치를\n        하고 있으며 침입차단시스템을 이용하여 외부로부터의 무단 접근을 통제하고\n        있습니다.\n      </Scrollbars>\n    </div>\n  );\n}\n","import React from 'react';\nimport fetch from 'node-fetch';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport Policy from './Policy';\nimport config from '../config.json';\nimport 'react-tabs/style/react-tabs.css';\nimport './Login.css';\n\ninterface LoginProps {\n  show: boolean;\n}\n\nclass Login extends React.Component<LoginProps, {}> {\n  login(e: any) {\n    e.preventDefault();\n    fetch(`${config.server}/auth`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username: e.target[0].value,\n        password: e.target[1].value,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.text())\n      .then((data) => {\n        if (data === 'false')\n          return alert('아이디 또는 비밀번호가 잘못되었습니다.');\n        localStorage.setItem('token', data);\n        window.location.reload();\n      });\n  }\n  signup(e: any) {\n    e.preventDefault();\n    if (e.target[0].value.length < 4 || e.target[1].value.length < 5)\n      return alert('아이디는 4글자, 비밀번호는 5글자 이상이어야 합니다.');\n    fetch(`${config.server}/signup`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username: e.target[0].value,\n        password: e.target[1].value,\n        email: e.target[2].value,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.text())\n      .then((data) => {\n        if (data === 'false') return alert('이미 존재하는 아이디입니다.');\n        localStorage.setItem('token', data);\n        window.location.reload();\n      });\n  }\n  render() {\n    if (this.props.show) {\n      return (\n        <div className=\"Login\">\n          <div className=\"dim\"></div>\n          <main>\n            <Tabs>\n              <TabList>\n                <Tab>로그인</Tab>\n                <Tab>회원가입</Tab>\n              </TabList>\n              <TabPanel>\n                <a href=\"https://ad.commu.live\">\n                  <img\n                    className=\"banner\"\n                    src=\"https://i.ibb.co/z5cVy1q/ad.png\"\n                    alt=\"\"\n                  />\n                </a>\n                <form onSubmit={this.login}>\n                  <div className=\"inputs\">\n                    <label>\n                      아이디\n                      <input type=\"text\" id=\"username\"></input>\n                    </label>\n                    <label>\n                      비밀번호\n                      <input type=\"password\" id=\"password\"></input>\n                    </label>\n                  </div>\n                  <input\n                    className=\"button\"\n                    type=\"submit\"\n                    value=\"로그인\"\n                  ></input>\n                </form>\n              </TabPanel>\n              <TabPanel>\n                <Policy />\n                <form onSubmit={this.signup}>\n                  <div className=\"inputs\">\n                    <label>\n                      아이디\n                      <input type=\"text\" id=\"username\"></input>\n                    </label>\n                    <label>\n                      비밀번호\n                      <input type=\"password\" id=\"password\"></input>\n                    </label>\n                    <label>\n                      이메일\n                      <input type=\"email\" id=\"email\"></input>\n                    </label>\n                  </div>\n                  <input\n                    className=\"button\"\n                    type=\"submit\"\n                    value=\"회원가입\"\n                  ></input>\n                </form>\n              </TabPanel>\n            </Tabs>\n          </main>\n        </div>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport socketio from 'socket.io-client';\nimport config from '../config.json';\nimport './Write.css';\n\nconst socket = socketio.connect(config.server);\n\nclass Write extends React.Component {\n  post(e: any) {\n    e.preventDefault();\n    e.persist();\n    if (\n      e.target[0].value.replace(/ /gi, '') === '' ||\n      e.target[1].value.replace(/ /gi, '') === ''\n    )\n      return;\n    fetch(`${config.server}/userInfo?token=${localStorage.getItem('token')}`)\n      .then((res) => res.json())\n      .then((data) => {\n        socket.emit('update', {\n          title: e.target[0].value,\n          content: e.target[1].value,\n          author: data.username,\n          comments: [],\n          views: 0,\n        });\n        window.location.href = '/';\n      });\n  }\n  render() {\n    return (\n      <div className=\"write\">\n        <h2>글쓰기</h2>\n        <form onSubmit={this.post}>\n          <label>\n            제목\n            <input type=\"text\"></input>\n          </label>\n          <label>\n            내용\n            <textarea></textarea>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"저장\"></input>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Write;\n","import React from 'react';\nimport PostList from './components/PostList';\nimport View from './components/View';\nimport Login from './components/Login';\nimport Write from './components/Write';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport './App.css';\n\nclass App extends React.Component<{}, { login: boolean }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      login: false,\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>LIVECommunity</h1>\n          {(() => {\n            if (window.localStorage.getItem('token') === null) {\n              return (\n                <button onClick={() => this.setState({ login: true })}>\n                  로그인\n                </button>\n              );\n            } else {\n              return (\n                <Link className=\"button\" to=\"/write\">\n                  글쓰기\n                </Link>\n              );\n            }\n          })()}\n        </header>\n        <Login show={this.state.login} />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={PostList} />\n            <Route exact path=\"/view/:id\" component={View} />\n            <Route exact path=\"/write\" component={Write} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <>\n    <Router>\n      <Route component={App} />\n    </Router>\n  </>,\n  document.getElementById('root')\n);"],"sourceRoot":""}